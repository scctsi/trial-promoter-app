- invalid_image_count = 0
- uncalculated_image_size_count = 0
- unduplicated_images = images.select { |image| image.duplicated_image.nil? }
- duplicated_images = images.select { |image| !image.duplicated_image.nil? }
%table.ui.celled.striped.table
  %form#image-tagging-form
    %thead
      %tr
        %th Database ID
        %th.center.aligned Image
        %th.center.aligned Filename
        %th.center.aligned Size
    %tbody
      - unduplicated_images.each do |image|
        - row_class = ''
        - if image.meets_instagram_ad_requirements == false
          - invalid_image_count += 1
          - row_class = 'negative'
        %tr.center.aligned{ :class => "#{row_class}" }
          %td= image.id
          %td
            = image_tag "#{image.url}", width: '150', lazy: true
          %td= image.original_filename
          %td
            - if image.width.nil? || image.height.nil?
              - uncalculated_image_size_count += 1
              Not calculated
            - else
              #{image.width} x #{image.height}
    %tfoot
      %tr
        %th{ :colspan => "5" }
          Number of invalid images (for instagram ads): #{invalid_image_count}
          %br
          Number of uncalculated image sizes: #{uncalculated_image_size_count}
%h2.header
  Duplicates
%table.ui.celled.striped.table
  %form#image-tagging-form
    %thead
      %tr
        %th Database ID
        %th.center.aligned Image
        %th.center.aligned Filename
        %th.center.aligned Duplicated Image
    %tbody
      - duplicated_images.each do |image|
        %tr.center.aligned
          %td= image.id
          %td
            = image_tag "#{image.url}", width: '150', lazy: true
          %td= image.original_filename
          %td
            = image_tag "#{image.duplicated_image.url}", width: '150', lazy: true
          
