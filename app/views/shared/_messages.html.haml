.ui.header
  .content
    = paginate messages
  = render partial: 'shared/object_count', locals: { count: messages.count.to_s + " out of " + messages.total_count.to_s, object_name: 'messages' }
- grouped_messages = messages.group_by{ |message| message.scheduled_date_time.to_date }
- grouped_messages.each do |scheduled_date, messages_by_scheduled_date|
  %h3.ui.dividing.header
    = scheduled_date.strftime("%b #{scheduled_date.day.ordinalize}")
  - grouped_messages_by_platform = messages_by_scheduled_date.group_by(&:platform)
  - grouped_messages_by_platform.each do |platform, messages_by_platform|
    %h4.ui.header
      %i{ :class => "#{platform.to_s} icon"}
      .content
        = platform.to_s.titleize
    .ui.items
      - messages_by_platform.each do |message|
        - show_label = false
        - if !message.buffer_update.nil?
          - if message.delayed?
            - show_label = true
        .item
          .ui.tiny.image
            -if message.image
              = image_tag "#{message.image.url}"
            -else
              = image_tag "no-image.png"
          .content
            = message.content
            - if show_label
              .ui.left.pointing.red.basic.label
                The message has been delayed
            .extra
              - if !message.buffer_publish_date
                .ui.basic.small.label
                  %i.clock.outline.icon
                  #{message.scheduled_date_time.strftime("%I:%M %p")}
              - else
                - if !message.buffer_update.nil?
                  Message was published on #{message.social_media_profile.platform_icon_and_name} at
                  .ui.left.green.basic.label
                    = message.buffer_update.sent_from_date_time.strftime("%I:%M %P, %b %d, %Y")
                - else
                  - if message.buffer_publish_date
                    Sent to Buffer on
                    - if message.scheduled_date_time <= message.buffer_publish_date + 2.days
                      .ui.left.red.basic.label
                        message.buffer_publish_date.strftime("%b %d, %Y")
                    - else
                      = message.buffer_publish_date.strftime("%b %d, %Y")
              .ui.basic.small.label
                = message.medium.to_s.titleize
              .ui.basic.small.label
                %i.hashtag.icon
                = message.social_media_profile.service_username
            - if message.click_meter_tracking_link
              .extra
                .ui.list
                  .item
                    Tracking URL: #{message.click_meter_tracking_link.tracking_url}
                  .item
                    Destination URL: #{message.click_meter_tracking_link.destination_url}
.ui.header
  .content
    = paginate messages
